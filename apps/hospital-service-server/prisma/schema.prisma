datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model MedicalRecord {
  createdAt  DateTime                     @default(now())
  date       DateTime?
  details    String?
  id         String                       @id @default(cuid())
  patient    Patient?                     @relation(fields: [patientId], references: [id])
  patientId  String?
  recordType EnumMedicalRecordRecordType?
  updatedAt  DateTime                     @updatedAt
}

model Patient {
  address        String?
  appointments   Appointment[]
  contactNumber  String?
  createdAt      DateTime        @default(now())
  dateOfBirth    DateTime?
  email          String?
  id             String          @id @default(cuid())
  medicalRecords MedicalRecord[]
  name           String?
  updatedAt      DateTime        @updatedAt
}

model Doctor {
  appointments   Appointment[]
  contactNumber  String?
  createdAt      DateTime      @default(now())
  department     Department?   @relation(fields: [departmentId], references: [id])
  departmentId   String?
  email          String?
  id             String        @id @default(cuid())
  name           String?
  specialization String?
  updatedAt      DateTime      @updatedAt
}

model Appointment {
  createdAt DateTime               @default(now())
  date      DateTime?
  doctor    Doctor?                @relation(fields: [doctorId], references: [id])
  doctorId  String?
  id        String                 @id @default(cuid())
  patient   Patient?               @relation(fields: [patientId], references: [id])
  patientId String?
  status    EnumAppointmentStatus?
  time      String?
  updatedAt DateTime               @updatedAt
}

model Department {
  createdAt   DateTime @default(now())
  description String?
  doctors     Doctor[]
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
}

enum EnumMedicalRecordRecordType {
  Option1
}

enum EnumAppointmentStatus {
  Option1
}
